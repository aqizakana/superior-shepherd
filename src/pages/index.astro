---
import { actions } from "astro:actions";
import Layout from "../layouts/Layout.astro";
import Hello from "../components/Header/Hello.astro";
import Greeting from "../components/Greeting.tsx";
import NewsletterSingup from "../components/Newsletter/NewsletterSignup.astro";
const result = Astro.getActionResult(actions.newsletter);
---

<Layout pageTitle="ホームページ">
	<Hello />
	<Greeting client:load messages={["Hej", "Hallo", "Hola", "Habari"]} />

	<button id="button">Get greeting</button>
	<NewsletterSingup />
	{
		result?.error && (
			<p class="error">Unable to sign up. Please try again later.</p>
		)
	}
	<div class="plate">
		<div class="plate__h1"></div>
		<div class="plate__h1">
			<h1 class="text-gradient">Astroストア</h1>
			<p>
				このサイトはAstroで作成されました。Astroは、高速でシンプルなWebサイトを構築するためのモダンなツールです。
			</p>
		</div>
	</div>
	<button id="btn">Click me</button>

	<script>
		import { prefetch } from "astro:prefetch";
		import { navigate } from "astro:transitions/client";

		const btn = document.getElementById("btn");
		if (btn) {
			btn.addEventListener("click", () => {
				prefetch("/dog/clifford");
				navigate("/dog/clifford");
			});
		}
	</script>

	<script>
		import { actions } from "astro:actions";

		const button = document.getElementById("button");
		button?.addEventListener("click", async () => {
			// Show alert pop-up with greeting from action
			console.log("Getting greeting...");
			const { data, error } = await actions.getGreeting({
				name: "Houston",
			});
			if (!error) alert(data);
		});
	</script>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		background-size: 400%;
		background-position: 0%;
		color: black;
	}
	.plate {
		background-color: aliceblue;
		padding: 2rem;
		border-radius: 1rem;
		width: 100%;
		margin: 5rem;
	}
	.plate__h1 {
		text-align: center;
		display: flex;
		flex-direction: row;
	}

	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
